1.抽象类与接口的区别

1）抽象类中可以有构造方法，接口中不能有
2）类是对对象的抽象，抽象类是对类的抽象，接口是对行为的抽象
3) 如果行为跨越不同类的对象，可以用接口，对于一些相似的类的对象，用继承抽象类

http://blog.csdn.net/yanshujun/article/details/6494447 --->java委托

2.区：
堆区:
1）存储的全部是对象，每个对象都包含一个与之对应的class的信息。(class的目的是得到操作指令)
2）jvm只有一个堆区(heap)被所有线程共享，堆中不存放基本类型和对象引用，只存放对象本身

栈区:
1）每个线程包含一个栈区，栈中只保存基础数据类型的对象和自定义对象的引用(不是对象)，对象都存放在堆区中
2）每个栈中的数据(原始类型和对象引用)都是私有的，其他栈不能访问。
3) 栈分为3个部分：基本类型变量区、执行环境上下文、操作指令区(存放操作指令)。

方法区:
1）又叫静态区，跟堆一样，被所有的线程共享。方法区包含所有的class和static变量。
2）方法区中包含的都是在整个程序中永远唯一的元素，如class，static变量。


3.原则：
1）单一原则：
就一个类而言，应该仅有一个引起它变化的原因

2）开放-封闭原则
原件实体(类，模块，函数等)应该可以拓展，但是不可修改

3）依赖倒转原则
a.高层模块不应该依赖底层模块。两个都应该依赖抽象
b.抽象不应该依赖细节，细节应该依赖抽象

说白了就是:要针对接口编程，不要针对现实编程。

4）里氏替换原则
子类型必须能够替换掉它们的父类型

5)迪米特法则
如果两个类不必彼此通信，那么这两个类就不应当发生直接的相互作用。
如果其中一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。

任何基类可以出现的地方，子类一定可以出现。